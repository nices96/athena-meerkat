/*
 * File: app/view/UserWindow.js
 *
 * This file was generated by Sencha Architect version 3.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('webapp.view.UserWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.UserWindow',

    height: 284,
    id: 'UserWindow',
    width: 440,
    title: 'New User',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    height: 260,
                    id: 'userForm',
                    bodyPadding: 10,
                    frameHeader: false,
                    header: false,
                    title: 'My Form',
                    items: [
                        {
                            xtype: 'textfield',
                            id: 'userIDTextField',
                            itemId: 'userIDTextField',
                            width: 388,
                            fieldLabel: 'User ID',
                            name: 'UserIDTextField',
                            allowBlank: false,
                            allowOnlyWhitespace: false,
                            emptyText: '',
                            validateBlank: true
                        },
                        {
                            xtype: 'textfield',
                            id: 'passwordTextField',
                            width: 390,
                            fieldLabel: 'Password',
                            name: 'PasswordTextField',
                            inputType: 'password',
                            allowBlank: false,
                            allowOnlyWhitespace: false
                        },
                        {
                            xtype: 'textfield',
                            id: 'RetypePasswordTextField',
                            width: 390,
                            fieldLabel: 'Retype-Password',
                            name: 'RetypePasswordTextField',
                            inputType: 'password',
                            allowBlank: false,
                            allowOnlyWhitespace: false
                        },
                        {
                            xtype: 'textfield',
                            width: 389,
                            fieldLabel: 'Full Name:',
                            name: 'FullNameTextField',
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            id: 'emailTextField',
                            width: 391,
                            fieldLabel: 'Email:',
                            name: 'EmailTextField',
                            inputType: 'email',
                            validateBlank: true,
                            vtype: 'email'
                        },
                        {
                            xtype: 'combobox',
                            id: 'UserRoleDropdownList',
                            width: 390,
                            fieldLabel: 'User Role',
                            name: 'UserRoleDropDownList',
                            displayField: 'name',
                            store: 'UserRoleStore',
                            valueField: 'id'
                        },
                        {
                            xtype: 'container',
                            height: 38,
                            layout: {
                                align: 'middle',
                                defaultMargins: '{"top":0,"right":10,"bottom":10,"left":0}',
                                pack: 'center',
                                type: 'hbox'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    margins: '10 10 10 10',
                                    itemId: 'btnCreate',
                                    text: 'Create'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        Ext.MessageBox.confirm('Confirm', '작업을 취소하시겠습니까?', function(btn){

                                            if(btn == "yes"){
                                                button.up("window").close();
                                            }
                                        });
                                    },
                                    text: 'Cancel'
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});