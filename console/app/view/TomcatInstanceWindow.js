/*
 * File: app/view/TomcatInstanceWindow.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('webapp.view.TomcatInstanceWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.TomcatInstanceWindow',

    requires: [
        'webapp.view.TomcatForm',
        'Ext.form.field.Display',
        'Ext.form.field.ComboBox',
        'Ext.button.Button',
        'Ext.form.Panel',
        'Ext.grid.Panel',
        'Ext.grid.column.CheckColumn',
        'Ext.grid.View',
        'Ext.form.field.Checkbox',
        'Ext.toolbar.Toolbar'
    ],

    id: 'TomcatInstanceWindow',
    itemId: 'TomcatInstanceWindow',
    width: 732,
    autoScroll: true,
    title: 'New Tomcat Instance',

    layout: {
        type: 'vbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'container',
                    flex: 1,
                    margin: '10 0 10 10',
                    items: [
                        {
                            xtype: 'displayfield',
                            id: 'domainField',
                            width: 399,
                            fieldLabel: 'Domain'
                        },
                        {
                            xtype: 'displayfield',
                            id: 'domainTypeDisplayField',
                            fieldLabel: 'Domain type:'
                        },
                        {
                            xtype: 'textfield',
                            id: 'newTomcatNameField',
                            width: 400,
                            fieldLabel: 'Instance name',
                            allowBlank: false,
                            allowOnlyWhitespace: false
                        },
                        {
                            xtype: 'combobox',
                            id: 'serverComboBox',
                            width: 399,
                            fieldLabel: 'Server',
                            editable: false,
                            displayField: 'name',
                            store: 'ServerStore',
                            valueField: 'id'
                        },
                        {
                            xtype: 'container',
                            layout: {
                                type: 'hbox',
                                align: 'stretch'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    disabled: true,
                                    id: 'btnTestConnection',
                                    itemId: '',
                                    text: 'Test server connection'
                                },
                                {
                                    xtype: 'displayfield',
                                    id: 'serverStatusDisplayField',
                                    margin: '0 0 0 20',
                                    fieldLabel: 'Server status'
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'tomcatform',
                    flex: 1
                },
                {
                    xtype: 'gridpanel',
                    flex: 1,
                    id: 'datasourceGrid',
                    margin: '10 10 10 10',
                    title: 'Data sources',
                    forceFit: true,
                    store: 'LinkingTomcatDatasourceStore',
                    columns: [
                        {
                            xtype: 'checkcolumn',
                            dataIndex: 'selected',
                            text: 'Select'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'name',
                            text: 'Name'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'jdbcUrl',
                            text: 'JDBC Url'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'dbType',
                            text: 'Servers'
                        }
                    ]
                },
                {
                    xtype: 'checkboxfield',
                    flex: 1,
                    id: 'autoRestartTomcatCheckbox',
                    fieldLabel: '',
                    boxLabel: 'Automatically start tomcat after being created'
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    flex: 1,
                    dock: 'bottom',
                    ui: 'footer',
                    items: [
                        {
                            xtype: 'button',
                            id: 'btnTomcatSubmit',
                            margin: '0 0 0 200',
                            text: 'Create'
                        },
                        {
                            xtype: 'button',
                            id: 'btnCancelTomcat',
                            margin: '0 0 0 10',
                            text: 'Cancel',
                            listeners: {
                                click: {
                                    fn: me.onBtnCancelTomcatClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onBtnCancelTomcatClick: function(button, e, eOpts) {
         Ext.MessageBox.confirm('Confirm', '작업을 취소하시겠습니까?', function(btn){

             if(btn == "yes"){
                button.up("window").close();
             }
         });
    }

});