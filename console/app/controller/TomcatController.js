/*
 * File: app/controller/TomcatController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('webapp.controller.TomcatController', {
    extend: 'Ext.app.Controller',

    onNewTomcatClick: function(button, e, eOpts) {
          var window = Ext.create("widget.TomcatInstanceWindow");
          // Show window
          window.show();

    },

    onDomainTomcatTabTabChange: function(tabPanel, newCard, oldCard, eOpts) {
 
    },

    onStartTomcatClick: function(button, e, eOpts) {
        this.changeState(GlobalData.lastSelectedMenuId, 1);
    },

    onStopTomcatClick: function(button, e, eOpts) {
        this.changeState(GlobalData.lastSelectedMenuId, 2);
    },

    onTomcatRestartClick: function(button, e, eOpts) {
        this.changeState(GlobalData.lastSelectedMenuId, 3);
    },

    changeState: function(id, state) {
        var url = GlobalData.urlPrefix;
        var newState = "";
        var action = "";
        if(state === 1) {// start
            url += "tomcat/instance/start";
            newState = "Started";
            action = "start";
        }
        else if(state===2) {//stop
            url += "tomcat/instance/stop";
            newState = "Stopped";
            action = "stop";
        }
        else if(state === 3) {//restart
            url += "tomcat/instance/restart";
            newState = "Restarted";
            action = "restart";
        }
        Ext.MessageBox.confirm('Confirm', 'Are you sure you want to ' + action +' this application?', function(btn){
            if(btn == "yes"){

                Ext.Ajax.request({
                    url: url,
                    params: {"id" : id},
                    success: function(resp, ops) {
                        var response = Ext.decode(resp.responseText);
                        if(response.success === true){
                            Ext.getCmp("tomcatStateField").setValue(newState);
                            if (response.data === 1) {
                                Ext.getCmp("btnTomcatStart").disable();
                                Ext.getCmp("btnTomcatStop").enable();
                                Ext.getCmp("btnTomcatRestart").enable();
                            }else if (response.data === 2){
                                Ext.getCmp("btnTomcatStart").enable();
                                Ext.getCmp("btnTomcatStop").disable();
                                Ext.getCmp("btnTomcatRestart").disable();

                            }
                        }
                        else {
                            Ext.Msg.show({
                                title: "Message",
                                msg: response.msg,
                                buttons: Ext.Msg.OK,
                                icon: Ext.Msg.WARNING
                            });
                        }

                    }
                });
            }
        });
    },

    getTomcatInstance: function(id, callback) {
        var url = GlobalData.urlPrefix + "tomcat/instance/get";
        Ext.Ajax.request({
            url: url,
            params: {"id" : id},
            success: function(resp, ops) {
                var response = Ext.decode(resp.responseText);
                if(response.success === true){
                    callback(response.data);
                }
                else {
                    Ext.Msg.show({
                        title: "Message",
                        msg: response.msg,
                        buttons: Ext.Msg.OK,
                        icon: Ext.Msg.WARNING
                    });
                }
            }
        });
    },

    displayTomcatInstance: function(id) {
            this.getTomcatInstance(id,function(tomcat){
                Ext.getCmp("tomcatNameField").setValue(tomcat.name);
                Ext.getCmp("tomcatStateField").setValue(tomcat.state === 1?"Started":"Stopped");
                if (tomcat.state === 1) {
                    Ext.getCmp("btnTomcatStart").disable();
                    Ext.getCmp("btnTomcatStop").enable();
                    Ext.getCmp("btnTomcatRestart").enable();
                }else if (tomcat.state === 2){
                    Ext.getCmp("btnTomcatStart").enable();
                    Ext.getCmp("btnTomcatStop").disable();
                    Ext.getCmp("btnTomcatRestart").disable();

                }
                Ext.getCmp("tomcatIPAddField").setValue(tomcat.ipaddress);
                Ext.getCmp("tomcatPortField").setValue("{HTTP:"+tomcat.httpPort+", AJP:"+tomcat.ajpPort+", redirect:"+tomcat.redirectPort+"}");
                Ext.getCmp("tomcatOSField").setValue(tomcat.osname);
                Ext.getCmp("tomcatJVMVersionField").setValue(tomcat.jvm);
                Ext.getCmp("tomcatWebServerField").setValue(tomcat.webServer);
                Ext.getCmp("tomcatDomainField").setValue(tomcat.domainName);

                Ext.getCmp("tomcatApplicationGrid").getStore().loadData(tomcat.applications, false);
                Ext.getCmp("tomcatDatasourcesGrid").getStore().loadData(tomcat.datasources, false);

            });

    },

    init: function(application) {
        this.control({
            "#btnNewTomcat": {
                click: this.onNewTomcatClick
            },
            "#domainTomcatTab": {
                tabchange: this.onDomainTomcatTabTabChange
            },
            "#btnTomcatStart": {
                click: this.onStartTomcatClick
            },
            "#btnTomcatStop": {
                click: this.onStopTomcatClick
            },
            "#btnTomcatRestart": {
                click: this.onTomcatRestartClick
            }
        });
    }

});
