<project name="install tomcat cmd" basedir="." default="cmd">
	
	<!-- 
	#########################################
	# Install Tomcat Engine & Tocmat Instance
	#########################################
	-->
	
	<property file="${basedir}/build.properties" />
	
	<property name="meerkat.agent.home" value="${agent.deploy.dir}/${agent.name}" />
	<property name="down.dir" value="${agent.deploy.dir}/${agent.name}/downloads" />

	<taskdef resource="cargo.tasks">
		<classpath>
			<pathelement location="${meerkat.agent.home}/lib/cargo-core-uberjar-1.4.19.jar" />
			<pathelement location="${meerkat.agent.home}/lib/cargo-ant-1.4.19.jar" />
		</classpath>
	</taskdef>
	
	<target name="check-catalina.base">
		<available file="${catalina.base}" type="dir" property="exist.instance" />
        <echo>exist.instance : ${exist.instance}</echo>
    </target>
	
	<target name="create-instance" depends="check-catalina.base" unless="exist.instance">
		<echo message="making ${catalina.home}" />
		<mkdir dir="${catalina.home}" />
		
		<echo message="making ${catalina.base}" />
		<mkdir dir="${catalina.base}" />

		<echo message="create ${catalina.base}" />

		<cargo containerId="tomcat${tomcat.major.ver}x" action="configure">
			<zipUrlInstaller 
					installUrl="${tomcat.down.url}/${tomcat.name}.zip" 
					downloadDir="${down.dir}" 
					extractDir="${down.dir}" />
			
			<configuration home="${catalina.base}">
			</configuration>
		</cargo>
		
		<delete includeemptydirs="true">
		    <fileset dir="${catalina.base}/webapps" includes="**/*"/>
		</delete>
	</target>
	
	<target name="check-catalina.home">
    	<condition property="installed.tomcat">
        	<resourceexists>
                <file file="${catalina.home}/bin/catalina.sh"/>
            </resourceexists>
        </condition>
        <echo>installed.tomcat : ${installed.tomcat}</echo>
    </target>
	
	<target name="copy-catalina-home" depends="create-instance, check-catalina.home" unless="installed.tomcat">
		<copy todir="${catalina.home}" description="copy to catalina.home">
			<fileset dir="${down.dir}/${tomcat.name}/${tomcat.name}"/>
		</copy>
	</target>
	
	

	<target name="cmd" depends="copy-catalina-home" >
		
		<fail if="exist.instance" message="already exist ${catalina.base}"/>

		<echo message="downloading catalina-jmx-remote-${tomcat.full.ver}.jar" />
		<get src="${tomcat.down.url}/catalina-jmx-remote-${tomcat.full.ver}.jar" dest="${catalina.home}/lib"/>

		<copy todir="${catalina.base}" verbose="true" description="copy start/stop script.">
		    <fileset dir="${meerkat.agent.home}/scripts" defaultexcludes="true">
		      <include name="*"/>
		    </fileset>
			<fileset dir="${meerkat.agent.home}/bin" defaultexcludes="true">
		      <include name="env.sh"/>
		    </fileset>
		</copy>

		<chmod dir="${catalina.home}" perm="755" includes="**/*.sh"/>
		<chmod dir="${catalina.base}" perm="755" includes="**/*.sh"/>
		
		<echo message="updating ${catalina.base}/conf/catalina.properties" />

		<propertyfile file="${catalina.base}/conf/catalina.properties" comment="##Generated file - do not modify!">
		     <entry key="am.server.port" 	value="${am.server.port}" 	operation="${am.conf.op}" />
		     <entry key="am.http.port"   	value="${am.http.port}" 	operation="${am.conf.op}" />
		     <entry key="am.uri.encoding"   value="${am.uri.encoding}" 	operation="${am.conf.op}" />
		     <entry key="am.ajp.port"    	value="${am.ajp.port}" 		operation="${am.conf.op}" />
			 <entry key="am.redirect.port"    	value="${am.redirect.port}" operation="${am.conf.op}" />
			 <entry key="am.rmi.registry.port"  value="${am.rmi.registry.port}" operation="${am.conf.op}" />
			 <entry key="am.rmi.server.port" 	value="${am.rmi.server.port}" 	operation="${am.conf.op}" />
			 <entry key="am.session.timeout" 	value="${am.ssion.timeout}" 	operation="${am.conf.op}" />
		</propertyfile>

		<property name="match1" >(&lt;session-timeout&gt;)30(&lt;/session-timeout&gt;)</property>
		<property name="replace1" >\1${am.session.timeout}\2</property>
		
		<echo message="updating ${catalina.base}/conf/web.xml" />
		<replaceregexp file="${catalina.base}/conf/web.xml" match="${match1}" replace="${replace1}" byline="true" />
		
	</target>


</project>