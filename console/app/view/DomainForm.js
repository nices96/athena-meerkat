/*
 * File: app/view/DomainForm.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('webapp.view.DomainForm', {
    extend: 'Ext.form.Panel',
    alias: 'widget.domainform',

    requires: [
        'Ext.form.RadioGroup',
        'Ext.form.field.Radio',
        'Ext.form.field.ComboBox',
        'Ext.form.field.Hidden'
    ],

    id: 'domainForm',
    itemId: 'domainForm',
    bodyPadding: 10,
    frameHeader: false,
    header: false,
    title: 'My Form',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            fieldDefaults: {
                msgTarget: 'side',
                labelWidth: 140,
                labelAlign: 'right'
            },
            items: [
                {
                    xtype: 'textfield',
                    id: 'domainNameTextField',
                    itemId: 'domainNameTextField',
                    width: 400,
                    fieldLabel: 'Name',
                    name: 'UserIDTextField',
                    allowBlank: false,
                    allowOnlyWhitespace: false,
                    emptyText: '',
                    validateBlank: true
                },
                {
                    xtype: 'radiogroup',
                    id: 'domainTypeRadioButtonField',
                    width: 400,
                    fieldLabel: 'Type',
                    items: [
                        {
                            xtype: 'radiofield',
                            id: 'domainTypeClustering',
                            name: 'DomainType',
                            value: true,
                            boxLabel: 'Clustering',
                            listeners: {
                                change: {
                                    fn: me.onDomainTypeClusteringChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'radiofield',
                            id: 'domainTypeNoneClustering',
                            name: 'DomainType',
                            value: false,
                            boxLabel: 'Non-clustering',
                            checked: true,
                            listeners: {
                                change: {
                                    fn: me.onDomainTypeNoneClusteringChange,
                                    scope: me
                                }
                            }
                        }
                    ]
                },
                {
                    xtype: 'combobox',
                    id: 'dataGridServerGroupComboBoxField',
                    width: 400,
                    fieldLabel: 'Session Server Group',
                    name: 'DatagridServerGroupComboBox',
                    allowBlank: false,
                    allowOnlyWhitespace: false,
                    displayField: 'name',
                    store: 'DatagridServerGroupStore',
                    valueField: 'id'
                },
                {
                    xtype: 'hiddenfield',
                    id: 'domainIdHiddenField',
                    fieldLabel: 'Label',
                    name: 'IDHiddenField'
                }
            ]
        });

        me.callParent(arguments);
    },

    onDomainTypeClusteringChange: function(field, newValue, oldValue, eOpts) {
        var comboBox = Ext.getCmp("dataGridServerGroupComboBoxField");
        if (comboBox.isVisible()){
            comboBox.hide();
        }

    },

    onDomainTypeNoneClusteringChange: function(field, newValue, oldValue, eOpts) {
        var comboBox = Ext.getCmp("dataGridServerGroupComboBoxField");
        if (comboBox.isHidden){
            comboBox.show();
        }
    }

});